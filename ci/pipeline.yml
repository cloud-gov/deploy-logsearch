groups:
  - name: all
    jobs:
      - reconfigure
      - build-logsearch-release
      - build-logsearch-for-cloudfoundry-release
      - check-backup-development-platform
      - check-backup-staging-platform
      - check-backup-staging-tenant
      - check-backup-production-platform
      - deploy-logsearch-platform-development
      - smoke-tests-platform-development
      - deploy-logsearch-platform-staging
      - smoke-tests-platform-staging
      - deploy-logsearch-platform-production
      - smoke-tests-platform-production
  - name: build-releases
    jobs:
      - build-logsearch-release
      - build-logsearch-for-cloudfoundry-release
  - name: platform-development
    jobs:
      - deploy-logsearch-platform-development
      - smoke-tests-platform-development
      - check-backup-development-platform
  - name: platform-staging
    jobs:
      - deploy-logsearch-platform-staging
      - smoke-tests-platform-staging
      - check-backup-staging-platform
  - name: platform-production
    jobs:
      - deploy-logsearch-platform-production
      - smoke-tests-platform-production
      - check-backup-production-platform
  - name: platform
    jobs:
      - deploy-logsearch-platform-development
      - smoke-tests-platform-development
      - check-backup-development-platform
      - deploy-logsearch-platform-staging
      - smoke-tests-platform-staging
      - check-backup-staging-platform
      - deploy-logsearch-platform-production
      - smoke-tests-platform-production
      - check-backup-production-platform
jobs:
  - name: reconfigure
    serial: true
    plan:
      - get: logsearch-config
        params: {depth: 1}
        trigger: true
      - get: secrets
        # Remember to manually trigger a new build if you upload a new version
        # of the credentials file.
        trigger: false
      - set_pipeline: ((name))
        file: logsearch-config/ci/pipeline.yml
        var_files:
          - secrets/((name)).yml
  - name: build-logsearch-release
    plan:
      - in_parallel:
          - get: release-git-repo
            resource: logsearch-release-git-repo
            trigger: true
          - get: pipeline-tasks
          - get: final-builds-dir-tarball
            resource: logsearch-final-builds-dir-tarball
          - get: releases-dir-tarball
            resource: logsearch-releases-dir-tarball
      - task: finalize-release
        file: pipeline-tasks/finalize-bosh-release.yml
        tags: [iaas]
        params:
          PRIVATE_YML_CONTENT: |-
            ---
            blobstore:
              options:
                region: ((aws-region))
                bucket_name: ((cg-s3-blobstore-bucket))
                credentials_source: env_or_profile
                server_side_encryption: AES256
      - in_parallel:
          - put: logsearch-release
            tags: [iaas]
            params:
              file: finalized-release/logsearch-*.tgz
          - put: logsearch-final-builds-dir-tarball
            tags: [iaas]
            params:
              file: finalized-release/final-builds-dir-logsearch.tgz
          - put: logsearch-releases-dir-tarball
            tags: [iaas]
            params:
              file: finalized-release/releases-dir-logsearch.tgz
  - name: build-logsearch-for-cloudfoundry-release
    plan:
      - in_parallel:
          - get: logsearch-config
            params: {depth: 1}
            trigger: true
          - get: release-git-repo
            resource: logsearch-for-cloudfoundry-release-git-repo
            trigger: true
          - get: pipeline-tasks
          - get: final-builds-dir-tarball
            resource: logsearch-for-cloudfoundry-final-builds-dir-tarball
          - get: releases-dir-tarball
            resource: logsearch-for-cloudfoundry-releases-dir-tarball
      - task: install-node-modules
        file: logsearch-config/ci/install-node-modules.yml
      - task: finalize-release
        file: pipeline-tasks/finalize-bosh-release.yml
        tags: [iaas]
        params:
          PRIVATE_YML_CONTENT: |-
            ---
            blobstore:
              options:
                region: ((aws-region))
                bucket_name: ((cg-s3-blobstore-bucket))
                credentials_source: env_or_profile
                server_side_encryption: AES256
      - in_parallel:
          - put: logsearch-for-cloudfoundry-release
            tags: [iaas]
            params:
              file: finalized-release/logsearch-for-cloudfoundry-*.tgz
          - put: logsearch-for-cloudfoundry-final-builds-dir-tarball
            tags: [iaas]
            params:
              file: finalized-release/final-builds-dir-logsearch-for-cloudfoundry.tgz
          - put: logsearch-for-cloudfoundry-releases-dir-tarball
            tags: [iaas]
            params:
              file: finalized-release/releases-dir-logsearch-for-cloudfoundry.tgz
  - name: deploy-logsearch-platform-development
    serial_groups: [bosh-platform-development]
    plan:
      - in_parallel:
          - get: common-development
          - get: pipeline-tasks
          - get: logsearch-config
            trigger: true
          - get: common-secrets
            resource: common-platform-development
            trigger: true
          - get: logsearch-for-cloudfoundry-release
            trigger: true
          - get: logsearch-release
            trigger: true
          - get: prometheus-release
            trigger: true
          - get: oauth2-proxy-release
            trigger: true
          - get: secureproxy-release
            trigger: true
          - get: logsearch-platform-stemcell-jammy
            trigger: true
          - get: terraform-yaml
            resource: terraform-yaml-development
            trigger: true
          - get: general-task
          - get: wazuh-agent
            trigger: true
          - get: wazuh-agent-release
            trigger: true
      - task: logsearch-manifest
        image: general-task
        config: &manifest-config
          platform: linux
          inputs:
            - name: logsearch-config
            - name: common-secrets
            - name: terraform-yaml
          run:
            path: sh
            args:
              - -exc
              - |
                SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
                  --prune terraform_outputs \
                  logsearch-config/logsearch-platform-deployment.yml \
                  logsearch-config/logsearch-platform-jobs.yml \
                  common-secrets/logsearch-platform-development.yml \
                  logsearch-config/logsearch-platform-development.yml \
                  terraform-yaml/state.yml \
                  > logsearch-manifest/manifest.yml
          outputs:
            - name: logsearch-manifest
          params:
            CF_USERNAME: ((cf-username-development))
            CF_PASSWORD: ((cf-password-development))
            CF_SYSTEM_DOMAIN: ((cf-system-domain-development))
      - put: logsearch-platform-development-deployment
        params: &deploy-params-platform
          manifest: logsearch-manifest/manifest.yml
          releases:
            - logsearch-release/*.tgz
            - logsearch-for-cloudfoundry-release/*.tgz
            - prometheus-release/*.tgz
            - oauth2-proxy-release/*.tgz
            - secureproxy-release/*.tgz
          stemcells:
            - logsearch-platform-stemcell-jammy/*.tgz
          ops_files:
            - wazuh-agent/ops/add-wazuh-agent-no-bpm.yml
          vars_files:
            - wazuh-agent/manifest/dev-vars.yml
    on_failure:
      put: slack
      params:
        <<: *slack-params
        text: |
          :x: FAILED to deploy platform logsearch on development
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  - name: smoke-tests-platform-development
    serial_groups: [bosh-platform-development]
    plan:
      - in_parallel:
          - get: common
            resource: master-bosh-root-cert
          - get: pipeline-tasks
          - get: tests-timer
            trigger: true
          - get: prometheus-release
            trigger: true
            passed: [deploy-logsearch-platform-development]
          - get: oauth2-proxy-release
            trigger: true
            passed: [deploy-logsearch-platform-development]
          - get: secureproxy-release
            trigger: true
            passed: [deploy-logsearch-platform-development]
          - get: logsearch-release
            trigger: true
            passed: [deploy-logsearch-platform-development]
          - get: logsearch-for-cloudfoundry-release
            trigger: true
            passed: [deploy-logsearch-platform-development]
          - get: logsearch-platform-stemcell-jammy
            trigger: true
            passed: [deploy-logsearch-platform-development]
          - get: logsearch-config
            trigger: true
            passed: [deploy-logsearch-platform-development]
      - task: smoke-tests
        file: pipeline-tasks/bosh-errand.yml
        params:
          BOSH_ENVIRONMENT: ((bosh.development.environment))
          BOSH_CLIENT: ((bosh.development.client))
          BOSH_CLIENT_SECRET: ((bosh.development.client-secret))
          BOSH_DEPLOYMENT: ((logsearch-platform.development.name))
          BOSH_ERRAND: ((logsearch-platform.development.smoke-tests))
          BOSH_FLAGS: "--keep-alive"
          BOSH_CA_CERT: common/master-bosh.crt
    on_failure:
      put: slack
      params:
        <<: *slack-params
        text: |
          :x: Smoke tests for platform logsearch on development FAILED
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  - name: deploy-logsearch-platform-staging
    serial_groups: [bosh-platform-staging]
    plan:
      - in_parallel:
          - get: pipeline-tasks
          - get: common-secrets
            resource: common-platform-staging
            trigger: true
          - get: logsearch-config
            trigger: true
            passed: [smoke-tests-platform-development]
          - get: logsearch-release
            trigger: true
            passed: [smoke-tests-platform-development]
          - get: logsearch-for-cloudfoundry-release
            trigger: true
            passed: [smoke-tests-platform-development]
          - get: prometheus-release
            trigger: true
            passed: [smoke-tests-platform-development]
          - get: oauth2-proxy-release
            trigger: true
            passed: [smoke-tests-platform-development]
          - get: secureproxy-release
            trigger: true
            passed: [smoke-tests-platform-development]
          - get: logsearch-platform-stemcell-jammy
            trigger: true
            passed: [smoke-tests-platform-development]
          - get: terraform-yaml
            resource: terraform-yaml-staging
            trigger: true
          - get: general-task
      - task: logsearch-manifest
        image: general-task
        config:
          <<: *manifest-config
          run:
            path: sh
            args:
              - -exc
              - |
                SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
                  --prune terraform_outputs \
                  logsearch-config/logsearch-platform-deployment.yml \
                  logsearch-config/logsearch-platform-jobs.yml \
                  common-secrets/logsearch-platform-staging.yml \
                  logsearch-config/logsearch-platform-staging.yml \
                  terraform-yaml/state.yml \
                  > logsearch-manifest/manifest.yml
          outputs:
            - name: logsearch-manifest
          params:
            CF_USERNAME: ((cf-username-staging))
            CF_PASSWORD: ((cf-password-staging))
            CF_SYSTEM_DOMAIN: ((cf-system-domain-staging))
      - put: logsearch-platform-staging-deployment
        params:
          manifest: logsearch-manifest/manifest.yml
          releases:
            - logsearch-release/*.tgz
            - logsearch-for-cloudfoundry-release/*.tgz
            - prometheus-release/*.tgz
            - oauth2-proxy-release/*.tgz
            - secureproxy-release/*.tgz
          stemcells:
            - logsearch-platform-stemcell-jammy/*.tgz
    on_failure:
      put: slack
      params:
        <<: *slack-params
        text: |
          :x: FAILED to deploy platform logsearch on staging
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  - name: smoke-tests-platform-staging
    serial_groups: [bosh-platform-staging]
    plan:
      - in_parallel:
          - get: common
            resource: master-bosh-root-cert
          - get: pipeline-tasks
          - get: logsearch-config
            trigger: true
            passed: [deploy-logsearch-platform-staging]
          - get: logsearch-release
            trigger: true
            passed: [deploy-logsearch-platform-staging]
          - get: logsearch-for-cloudfoundry-release
            trigger: true
            passed: [deploy-logsearch-platform-staging]
          - get: prometheus-release
            trigger: true
            passed: [deploy-logsearch-platform-staging]
          - get: oauth2-proxy-release
            trigger: true
            passed: [deploy-logsearch-platform-staging]
          - get: secureproxy-release
            trigger: true
            passed: [deploy-logsearch-platform-staging]
          - get: logsearch-platform-stemcell-jammy
            trigger: true
            passed: [deploy-logsearch-platform-staging]
          - get: logsearch-platform-staging-deployment
            trigger: true
          - get: tests-timer
            trigger: true
      - task: smoke-tests
        file: pipeline-tasks/bosh-errand.yml
        params:
          BOSH_ENVIRONMENT: ((bosh.staging.environment))
          BOSH_CLIENT: ((bosh.staging.client))
          BOSH_CLIENT_SECRET: ((bosh.staging.client-secret))
          BOSH_DEPLOYMENT: ((logsearch-platform.staging.name))
          BOSH_ERRAND: ((logsearch-platform.staging.smoke-tests))
          BOSH_FLAGS: "--keep-alive"
          BOSH_CA_CERT: common/master-bosh.crt
    on_failure:
      put: slack
      params:
        <<: *slack-params
        text: |
          :x: Smoke tests for platform logsearch on staging FAILED
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

  - name: deploy-logsearch-platform-production
    serial_groups: [bosh-platform-production]
    plan:
      - in_parallel:
          - get: pipeline-tasks
          - get: common-secrets
            resource: common-platform-production
          - get: logsearch-config
            passed: [smoke-tests-platform-staging]
          - get: logsearch-release
            passed: [smoke-tests-platform-staging]
          - get: logsearch-for-cloudfoundry-release
            passed: [smoke-tests-platform-staging]
          - get: prometheus-release
            passed: [smoke-tests-platform-staging]
          - get: oauth2-proxy-release
            passed: [smoke-tests-platform-staging]
          - get: secureproxy-release
            passed: [smoke-tests-platform-staging]
          - get: logsearch-platform-stemcell-jammy
            passed: [smoke-tests-platform-staging]
          - get: logsearch-platform-staging-deployment
          - get: terraform-yaml
            resource: terraform-yaml-production
          - get: general-task
      - task: logsearch-manifest
        image: general-task
        config:
          <<: *manifest-config
          run:
            path: sh
            args:
              - -exc
              - |
                SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
                  --prune terraform_outputs \
                  logsearch-config/logsearch-platform-deployment.yml \
                  logsearch-config/logsearch-platform-jobs.yml \
                  common-secrets/logsearch-platform-production.yml \
                  logsearch-config/logsearch-platform-production.yml \
                  terraform-yaml/state.yml \
                  > logsearch-manifest/manifest.yml
          outputs:
            - name: logsearch-manifest
          params:
            CF_USERNAME: ((cf-username-production))
            CF_PASSWORD: ((cf-password-production))
            CF_SYSTEM_DOMAIN: ((cf-system-domain-production))
      - put: logsearch-platform-production-deployment
        params:
          manifest: logsearch-manifest/manifest.yml
          releases:
            - logsearch-release/*.tgz
            - logsearch-for-cloudfoundry-release/*.tgz
            - prometheus-release/*.tgz
            - oauth2-proxy-release/*.tgz
            - secureproxy-release/*.tgz
          stemcells:
            - logsearch-platform-stemcell-jammy/*.tgz
    on_failure:
      put: slack
      params:
        <<: *slack-params
        text: |
          :x: FAILED to deploy platform logsearch on production
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  - name: smoke-tests-platform-production
    serial_groups: [bosh-platform-production]
    plan:
      - in_parallel:
          - get: common
            resource: master-bosh-root-cert
          - get: pipeline-tasks
          - get: logsearch-config
            trigger: true
            passed: [deploy-logsearch-platform-production]
          - get: logsearch-release
            trigger: true
            passed: [deploy-logsearch-platform-production]
          - get: logsearch-for-cloudfoundry-release
            trigger: true
            passed: [deploy-logsearch-platform-production]
          - get: prometheus-release
            trigger: true
            passed: [deploy-logsearch-platform-production]
          - get: oauth2-proxy-release
            trigger: true
            passed: [deploy-logsearch-platform-production]
          - get: secureproxy-release
            trigger: true
            passed: [deploy-logsearch-platform-production]
          - get: logsearch-platform-stemcell-jammy
            trigger: true
            passed: [deploy-logsearch-platform-production]
          - get: logsearch-platform-production-deployment
            trigger: true
          - get: tests-timer
            trigger: true
      - task: smoke-tests
        file: pipeline-tasks/bosh-errand.yml
        params:
          BOSH_ENVIRONMENT: ((bosh.production.environment))
          BOSH_CLIENT: ((bosh.production.client))
          BOSH_CLIENT_SECRET: ((bosh.production.client-secret))
          BOSH_DEPLOYMENT: ((logsearch-platform.production.name))
          BOSH_ERRAND: ((logsearch-platform.production.smoke-tests))
          BOSH_FLAGS: "--keep-alive"
          BOSH_CA_CERT: common/master-bosh.crt
    on_failure:
      put: slack
      params:
        <<: *slack-params
        channel: '#cg-platform'
        text: |
          :x: Smoke tests for platform logsearch on production FAILED
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  - name: check-backup-development-platform
    plan:
      - in_parallel:
          - get: check-backup-timer
            trigger: true
          - get: logsearch-config
          - get: general-task
      - task: check-backup
        image: general-task
        file: logsearch-config/ci/check-backup.yml
        params:
          ES_HOST: ((logsearch-development-platform-check-backup-es-host))
          GATEWAY_HOST: prometheus-staging.service.cf.internal
          ENVIRONMENT: development-platform
          INDEX_PATTERN: logs-platform-*
  - name: check-backup-staging-tenant
    plan:
      - in_parallel:
          - get: check-backup-timer
            trigger: true
          - get: logsearch-config
          - get: general-task
      - task: check-backup
        image: general-task
        file: logsearch-config/ci/check-backup.yml
        tags: [iaas]
        params:
          AWS_DEFAULT_REGION: ((aws-region))
          ES_HOST: ((logsearch-staging-check-backup-es-host))
          GATEWAY_HOST: prometheus-staging.service.cf.internal
          BUCKET_NAME: logsearch-cf-staging
          ENVIRONMENT: staging-tenant
          INDEX_PATTERN: logs-app-*
  - name: check-backup-staging-platform
    plan:
      - in_parallel:
          - get: check-backup-timer
            trigger: true
          - get: logsearch-config
          - get: general-task
      - task: check-backup
        image: general-task
        file: logsearch-config/ci/check-backup.yml
        params:
          ES_HOST: ((logsearch-staging-platform-check-backup-es-host))
          GATEWAY_HOST: prometheus-staging.service.cf.internal
          ENVIRONMENT: development-platform
          INDEX_PATTERN: logs-platform-*
  - name: check-backup-production-platform
    plan:
      - in_parallel:
          - get: check-backup-timer
            trigger: true
          - get: logsearch-config
          - get: general-task
      - task: check-backup
        image: general-task
        file: logsearch-config/ci/check-backup.yml
        params:
          ES_HOST: ((logsearch-production-platform-check-backup-es-host))
          GATEWAY_HOST: prometheus-production.service.cf.internal
          ENVIRONMENT: production-platform
          INDEX_PATTERN: logs-platform-*
resources:
  - name: logsearch-release-git-repo
    type: git
    source:
      commit_verification_keys: ((cloud-gov-pgp-keys))
      uri: https://github.com/cloud-gov/logsearch-boshrelease
      branch: main
  - name: logsearch-final-builds-dir-tarball
    type: s3-iam
    source:
      check: never
      bucket: ((cg-s3-bosh-releases-bucket))
      versioned_file: final-builds-dir-logsearch.tgz
      region_name: ((aws-region))
      server_side_encryption: AES256
  - name: logsearch-releases-dir-tarball
    type: s3-iam
    source:
      check: never
      bucket: ((cg-s3-bosh-releases-bucket))
      versioned_file: releases-dir-logsearch.tgz
      region_name: ((aws-region))
      server_side_encryption: AES256
  - name: logsearch-for-cloudfoundry-release-git-repo
    type: git
    source:
      commit_verification_keys: ((cloud-gov-pgp-keys))
      uri: https://github.com/cloud-gov/logsearch-for-cloudfoundry
      branch: main
  - name: logsearch-for-cloudfoundry-final-builds-dir-tarball
    type: s3-iam
    source:
      bucket: ((cg-s3-bosh-releases-bucket))
      versioned_file: final-builds-dir-logsearch-for-cloudfoundry.tgz
      region_name: ((aws-region))
      server_side_encryption: AES256
  - name: logsearch-for-cloudfoundry-releases-dir-tarball
    type: s3-iam
    source:
      bucket: ((cg-s3-bosh-releases-bucket))
      versioned_file: releases-dir-logsearch-for-cloudfoundry.tgz
      region_name: ((aws-region))
      server_side_encryption: AES256
  - name: master-bosh-root-cert
    type: s3-iam
    source:
      bucket: ((logsearch-private-bucket))
      region_name: ((aws-region))
      versioned_file: master-bosh.crt
  - name: common-development
    type: s3-iam
    source:
      bucket: ((logsearch-private-bucket))
      versioned_file: logsearch-development.yml
      region_name: ((aws-region))
  - name: common-platform-development
    type: s3-iam
    source:
      bucket: ((logsearch-private-bucket))
      versioned_file: logsearch-platform-development.yml
      region_name: ((aws-region))
  - name: common-platform-staging
    type: s3-iam
    source:
      bucket: ((logsearch-private-bucket))
      versioned_file: logsearch-platform-staging.yml
      region_name: ((aws-region))
  - name: common-platform-production
    type: s3-iam
    source:
      bucket: ((logsearch-private-bucket))
      versioned_file: logsearch-platform-production.yml
      region_name: ((aws-region))
  - name: logsearch-release
    type: s3-iam
    source:
      bucket: ((cg-s3-bosh-releases-bucket))
      regexp: logsearch-([\d\.]*).tgz
      region_name: ((aws-region))
      server_side_encryption: AES256
  - name: logsearch-for-cloudfoundry-release
    type: s3-iam
    source:
      bucket: ((cg-s3-bosh-releases-bucket))
      regexp: logsearch-for-cloudfoundry-(.*).tgz
      region_name: ((aws-region))
      server_side_encryption: AES256
  - name: oauth2-proxy-release
    type: s3-iam
    source:
      bucket: ((cg-s3-bosh-releases-bucket))
      regexp: oauth2-proxy-(.*).tgz
      region_name: ((aws-region))
  - name: secureproxy-release
    type: s3-iam
    source:
      bucket: ((cg-s3-bosh-releases-bucket))
      regexp: secureproxy-(.*).tgz
      region_name: ((aws-region))
  - name: prometheus-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-community/prometheus-boshrelease
  - name: logsearch-config
    type: git
    source:
      commit_verification_keys: ((cloud-gov-pgp-keys))
      uri: ((cg-deploy-logsearch-git-url))
  - name: logsearch-platform-stemcell-jammy
    source:
      name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent
    type: bosh-io-stemcell
  - name: logsearch-platform-development-deployment
    type: bosh-deployment
    source:
      target: ((logsearch-development-deployment-bosh-target))
      client: ((logsearch-development-deployment-bosh-client))
      client_secret: ((logsearch-development-deployment-bosh-client-secret))
      ca_cert: ((logsearch-development-ca-cert))
      deployment: logsearch-platform
  - name: logsearch-platform-staging-deployment
    type: bosh-deployment
    source:
      target: ((logsearch-staging-deployment-bosh-target))
      client: ((logsearch-staging-deployment-bosh-client))
      client_secret: ((logsearch-staging-deployment-bosh-client-secret))
      ca_cert: ((logsearch-staging-ca-cert))
      deployment: logsearch-platform
  - name: logsearch-platform-production-deployment
    type: bosh-deployment
    source:
      target: ((logsearch-production-deployment-bosh-target))
      client: ((logsearch-production-deployment-bosh-client))
      client_secret: ((logsearch-production-deployment-bosh-client-secret))
      ca_cert: ((logsearch-production-ca-cert))
      deployment: logsearch-platform
  - name: pipeline-tasks
    type: git
    source:
      commit_verification_keys: ((cloud-gov-pgp-keys))
      uri: ((pipeline-tasks-git-url))
      branch: ((pipeline-tasks-git-branch))
  - name: slack
    type: slack-notification
    source:
      url: ((slack-webhook-url))
  - name: tests-timer
    type: time
    source:
      interval: 30m
  - name: check-backup-timer
    type: time
    source:
      interval: 30m
  - name: terraform-yaml-development
    type: s3-iam
    source:
      bucket: ((tf-state-bucket-development))
      versioned_file: ((tf-state-file-development))
      region_name: ((aws-region))
  - name: terraform-yaml-staging
    type: s3-iam
    source:
      bucket: ((tf-state-bucket-staging))
      versioned_file: ((tf-state-file-staging))
      region_name: ((aws-region))
  - name: terraform-yaml-production
    type: s3-iam
    source:
      bucket: ((tf-state-bucket-production))
      versioned_file: ((tf-state-file-production))
      region_name: ((aws-region))
  - name: general-task
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: general-task
      aws_region: us-gov-west-1
      tag: latest
  - name: secrets
    type: s3-iam
    icon: cloud-lock
    source:
      region_name: ((concourse-varz-bucket-region))
      bucket: ((concourse-varz-bucket))
      versioned_file: ((name)).yml
  - name: wazuh-agent
    type: git
    source:
      branch: main
      commit_verification_keys: ((cloud-gov-pgp-keys))
      git_config:
      - name: "user.name"
        value: "cg-ci-bot"
      - name: "user.email"
        value: "no-reply@cloud.gov"
      paths:
      - ops/add-wazuh-agent-no-bpm.yml
      - manifest/dev-vars.yml
      private_key: ((cg-ci-bot-sshkey.private_key))
      uri: git@github.com:cloud-gov/wazuh-agent.git
      username: cg-ci-bot
  - name: wazuh-agent-release
    type: s3-iam
    source:
      bucket: ((cg-s3-bosh-releases-bucket))
      region_name: ((aws-region))
      private: true
      regexp: wazuh-agent-(.*).tgz

resource_types:
  - name: registry-image
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: registry-image-resource
      aws_region: us-gov-west-1
      tag: latest
  - name: slack-notification
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: slack-notification-resource
      aws_region: us-gov-west-1
      tag: latest
  - name: bosh-deployment
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: bosh-deployment-resource
      aws_region: us-gov-west-1
      tag: latest
  - name: s3-iam
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: s3-resource
      aws_region: us-gov-west-1
      tag: latest
  - name: time
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: time-resource
      aws_region: us-gov-west-1
      tag: latest
  - name: git
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: git-resource
      aws_region: us-gov-west-1
      tag: latest
  - name: bosh-io-stemcell
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: bosh-io-stemcell-resource
      aws_region: us-gov-west-1
      tag: latest
  - name: bosh-io-release
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: bosh-io-release-resource
      aws_region: us-gov-west-1
      tag: latest
